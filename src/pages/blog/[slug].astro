---
import { getCollection, render } from "astro:content";
import BlogPostLayout from "../../layouts/BlogPostLayout.astro";

export async function getStaticPaths() {
  const posts = await getCollection("blog");
  return posts.map((post) => ({
    params: { slug: post.id },
    props: { post },
  }));
}

const { post } = Astro.props;
const { Content } = await render(post);

// Get all posts for navigation
const allPosts = (await getCollection("blog")).sort(
  (a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf()
);

// Find current post index
const currentIndex = allPosts.findIndex(p => p.id === post.id);

// Get related posts (previous and next)
const relatedPosts = [];
if (currentIndex > 0) {
  relatedPosts.push(allPosts[currentIndex - 1]); // Previous post
}
if (currentIndex < allPosts.length - 1) {
  relatedPosts.push(allPosts[currentIndex + 1]); // Next post
}

// Add more posts if needed (up to 3 total)
let additionalIndex = currentIndex - 2;
while (relatedPosts.length < 3 && additionalIndex >= 0) {
  relatedPosts.push(allPosts[additionalIndex]);
  additionalIndex--;
}

additionalIndex = currentIndex + 2;
while (relatedPosts.length < 3 && additionalIndex < allPosts.length) {
  relatedPosts.push(allPosts[additionalIndex]);
  additionalIndex++;
}

const relatedLinks = relatedPosts.map(p => ({
  url: `/blog/${p.id}`,
  title: p.data.title,
  description: p.data.description,
}));
---

<BlogPostLayout
  frontmatter={{
    ...post.data,
    relatedLinks
  }}
>
  <Content />
</BlogPostLayout>