---
import LinkList from "../../components/LinkList.astro";
import BaseLayout from "../../layouts/BaseLayout.astro";
import qctrlLogin from "../../assets/q-ctrl-login.png";
import { Picture } from "astro:assets";
---

<BaseLayout
  pageTitle="Q-CTRL by Mike Dijkstra"
  pageDescription="Q-CTRL by Mike Dijkstra"
  logo="true"
  bodyClass="bg-black text-white font-sans"
>
  <div class="space-y-24 py-24 px-6">
    <div class="max-w-6xl text-9xl leading-24 mx-auto space-y-12 text-center">
      <h1 class="text-6xl lg:text-8xl leading-16 lg:leading-24">Q-CTRL</h1>

      <div class="w-full border-white/80 p-6">
        <Picture
          class="block w-full max-w-full h-auto"
          src={qctrlLogin}
          alt="Q-CTRL Login Screenshot"
        />
        <figcaption class="text-2xl mt-3">a. Q-CTRL Black Opal</figcaption>
      </div>
    </div>

    <div class="max-w-6xl mx-auto grid lg:grid-cols-12 gap-12">
      <div class="md:col-span-8 space-y-24">
        <div class="space-y-6">
          <h2 class="text-3xl">Understanding Quantum Computing</h2>
          <p class="text-2xl">
            Starting in a joint Head of Product and Lead Front-end Engineer at
            Q-CTRL I was involved in the conception and build of BLACK OPAL for
            Alpha, Beta and public release. It was my responsibility to take the
            ideas from the CEO and team and bring them together into an
            application called BLACK OPAL. By the time I left I was managing two
            other developers and helping direct the overall development of the
            platform with Lead Back-end Engineer Kevin Nguyen.
          </p>

          <p class="text-2xl">
            BLACK OPAL is a React application which allows users to analyse the
            performance of single and multi-qubit gates, download quantum
            controls, download and run experiments to analyse noise sources
            disrupting their quantum hardware and generate optimised controls.
          </p>

          <p class="text-2xl">
            The Front-end application was bootstrapped with Create React App,
            packages were managed with yarn, made use of Redux for state
            management, React Router for routing, Reselect to compute derived
            data allowing Redux to store the minimal possible state, React Redux
            Form to create forms, react-intl for internationalisation, Enzyme
            and Jest for unit and integration tests, Styled Components for
            css-in-js components, grid-styled for a flex box grid system and
            styled-system to provide design system utilities for
            styled-components. Code was formatted with Prettier and Storybook
            was used for UI development.
          </p>

          <p class="text-2xl">
            The product leveraged the Google stack for a server-less
            architecture, using Firebase for hosting, data and authentication
            and event-driven processing with Cloud Functions. We integrated with
            Stripe for Payments and Segment for analytics.
          </p>

          <p class="text-2xl">
            The Front-end application would listen for updates in the Firebase
            realtime database and use this data to populate the state via Redux.
            When a user would make a change it would be updated in the realtime
            database where Cloud Functions would then make the appropriate API
            calls and return the data to the realtime database which would
            automatically update in the front-end.
          </p>

          <p class="text-2xl">
            Circle CI was setup and used for Continuous Integration, deploying
            the application to Firebase and hosting the Storybook on Netlify.
          </p>
        </div>
      </div>

      <div class="md:col-span-4 space-y-6 md:sticky">
        <dl class="grid grid-cols-4 text-2xl">
          <dt class="col-span-1">Scope</dt>
          <dd class="col-span-3">
            <ul class="list-none">
              <li>Software Development</li>
              <li>Product Management</li>
            </ul>
          </dd>
        </dl>

        <dl class="grid grid-cols-4 text-2xl">
          <dt class="col-span-1">Tech</dt>
          <dd class="col-span-3">
            <ul class="list-none">
              <li>React</li>
              <li>TypeScript</li>
              <li>Styled Components</li>
              <li>Storybook</li>
              <li>Node</li>
              <li>Netlify</li>
              <li>Firebase</li>
              <li>Google Cloud Functions</li>
              <li>GCP</li>
            </ul>
          </dd>
        </dl>
      </div>
    </div>

    <div class="space-y-6">
      <div class="max-w-4xl mx-auto">
        <h2 class="text-4xl">
          <span class="-ml-1 pr-4">ðŸ‘‡</span> Up next
        </h2>
      </div>

      <LinkList
        links={[
          {
            url: "/work/small-victories",
            title: "Small Victories",
            description: "View case study",
          },
          {
            url: "/work",
            title: "Work",
            description: "See my full project list and work history.",
          },
          {
            url: "/contact",
            title: "Contact",
            description: "Have a project to discuss? Get in touch.",
          },
        ]}
      />
    </div>
  </div>
</BaseLayout>

<style>
  :root {
    --nav-rgb: 0, 0, 0;
  }
</style>
